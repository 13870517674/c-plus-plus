#include <iostream>
/*非静态成员函数可以不带引用限定符，带有左值引用限定符（函数名后的 & 记号），或带有右值引用限定符（函数名后的 && 记号）声明。在重载决议中，按下列方式对待类 X 的非静态有 cv 限定符序列的成员函数：

不带引用限定符：隐式对象形参具有到 cv 限定的 X 的左值引用类型，并额外允许绑定到右值隐含对象实参(其实就是普通使用的，既可以被左值调用也能被右值)
左值引用限定符：隐式对象形参具有到 cv 限定的 X 的左值引用类型
右值引用限定符：隐式对象形参具有到 cv 限定的 X 的右值引用类型*/
struct S
{
    void f()const& { std::cout << "左值\n"; }
    void f()const&& { std::cout << "右值\n"; }
    //void f()const { std::cout << "不带引用限定符\n"; }//error 我们不能写了引用限定符的同名函数还写一个不带的，最多是像上面两个那样
};

int main()
{
    S s;
    s.f();            // 打印“左值”
    std::move(s).f(); // 打印“右值”
    S().f();          // 打印“右值”
}